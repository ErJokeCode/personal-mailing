"""versioning

Revision ID: 8010a024bdb4
Revises: 985acca4b8e2
Create Date: 2025-04-16 21:16:13.807894

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "8010a024bdb4"
down_revision: Union[str, None] = "985acca4b8e2"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "category_versions",
        sa.Column("category_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.Text(), server_default="", nullable=False),
        sa.Column("tutor_id", sa.UUID(), nullable=False),
        sa.Column(
            "change_type",
            sa.Enum("CREATE", "UPDATE", "DELETE", "RESTORE", name="changetype"),
            nullable=False,
        ),
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_category_versions_category_id"),
        "category_versions",
        ["category_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_category_versions_change_type"),
        "category_versions",
        ["change_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_category_versions_tutor_id"),
        "category_versions",
        ["tutor_id"],
        unique=False,
    )
    op.create_table(
        "knowledge_item_versions",
        sa.Column("knowledge_item_id", sa.UUID(), nullable=False),
        sa.Column("question", sa.Text(), server_default="", nullable=False),
        sa.Column("answer", sa.Text(), server_default="", nullable=False),
        sa.Column(
            "question_tags",
            sa.ARRAY(sa.String(length=255)),
            server_default="{}",
            nullable=False,
        ),
        sa.Column(
            "answer_tags",
            sa.ARRAY(sa.String(length=255)),
            server_default="{}",
            nullable=False,
        ),
        sa.Column("category_id", sa.UUID(), nullable=False),
        sa.Column("tutor_id", sa.UUID(), nullable=False),
        sa.Column(
            "change_type",
            sa.Enum("CREATE", "UPDATE", "DELETE", "RESTORE", name="changetype"),
            nullable=False,
        ),
        sa.Column("deleted_with_category_version_id", sa.UUID(), nullable=True),
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["deleted_with_category_version_id"],
            ["category_versions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["knowledge_item_id"],
            ["knowledge_items.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_knowledge_item_versions_category_id"),
        "knowledge_item_versions",
        ["category_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_knowledge_item_versions_change_type"),
        "knowledge_item_versions",
        ["change_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_knowledge_item_versions_deleted_with_category_version_id"),
        "knowledge_item_versions",
        ["deleted_with_category_version_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_knowledge_item_versions_knowledge_item_id"),
        "knowledge_item_versions",
        ["knowledge_item_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_knowledge_item_versions_tutor_id"),
        "knowledge_item_versions",
        ["tutor_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_knowledge_item_versions_tutor_id"),
        table_name="knowledge_item_versions",
    )
    op.drop_index(
        op.f("ix_knowledge_item_versions_knowledge_item_id"),
        table_name="knowledge_item_versions",
    )
    op.drop_index(
        op.f("ix_knowledge_item_versions_deleted_with_category_version_id"),
        table_name="knowledge_item_versions",
    )
    op.drop_index(
        op.f("ix_knowledge_item_versions_change_type"),
        table_name="knowledge_item_versions",
    )
    op.drop_index(
        op.f("ix_knowledge_item_versions_category_id"),
        table_name="knowledge_item_versions",
    )
    op.drop_table("knowledge_item_versions")
    op.drop_index(op.f("ix_category_versions_tutor_id"), table_name="category_versions")
    op.drop_index(
        op.f("ix_category_versions_change_type"), table_name="category_versions"
    )
    op.drop_index(
        op.f("ix_category_versions_category_id"), table_name="category_versions"
    )
    op.drop_table("category_versions")
    # ### end Alembic commands ###
