services:
  coredb:
    image: postgres
    ports:
      - 5400:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: coredb
    volumes:
      - coredata:/var/lib/core/data
  
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 5401:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@domain.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      coredb:
        condition: service_started
    volumes:
      - pgadmindata:/var/lib/pgadmin/data

  core:
    user: root
    build: ./servers/Core/Source
    ports:
      - 5000:5000
    depends_on:
      coredb:
        condition: service_started
    healthcheck:
      test: "curl -f localhost:5000/ping"
      interval: 10s
      timeout: 30s
      retries: 10
    volumes:
      - './servers/Core/Source:/app:z'
      - '/app/bin'
      - '/app/obj'

  admin-panel:
    build: ./admin-panel
    ports:
      - 5015:5015
    volumes:
      - './admin-panel:/app:z'
      - '/app/node_modules'

  redis:
    image: redis
    ports:
      - 6397:6379
    volumes:
      - redisdata:/var/lib/redis/data
  
  redis-insight:
    image: redislabs/redisinsight
    ports:
      - 6398:5540
    depends_on:
      redis:
        condition: service_started
    volumes:
      - insightdata:/var/lib/redisinsight/data

  bot:
    user: root
    build: ./telegram-bot
    command: bash start.sh
    ports:
      - 8001:8000
    depends_on:
      redis:
        condition: service_started
      core:
        condition: service_healthy
    volumes:
      - './telegram-bot:/app:z'

  parserdb:
    image: mongo
    ports:
      - 27071:27017
    volumes:
      - parserdata:/var/lib/parser/data
  
  monogo-express:
    image: mongo-express
    ports:
      - 27072:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: parserdb
      ME_CONFIG_BASICAUTH_USERNAME: user
      ME_CONFIG_BASICAUTH_PASSWORD: pass
    depends_on:
      parserdb:
        condition: service_started
    volumes:
      - expressdata:/var/lib/mongoexpress/data

  parser:
    user: root
    build: ./servers/parser
    ports:
      - 8000:8000
    depends_on:
      parserdb:
        condition: service_started
    volumes:
      - './servers/parser:/app:z'

volumes:
  redisdata:
  parserdata:
  coredata:
  pgadmindata:
  insightdata:
  expressdata: