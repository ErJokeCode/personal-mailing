services:
  coredb:
    image: postgres
    ports:
      - 5400:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: coredb
    volumes:
      - coredata:/var/lib/core/data

  blob-storage:
    image: mcr.microsoft.com/azure-storage/azurite
    command: "azurite-blob --blobHost 0.0.0.0 -l /var/lib/blob/data"
    ports:
      - 10000:10000
    volumes:
      - blobdata:/var/lib/blob/data

  core:
    build: ./servers/core/Source
    ports:
      - 193.108.115.129:5000:5000
    depends_on:
      coredb:
        condition: service_started
      parser:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: "curl --fail http://193.108.115.129:5000/healthy || exit"
      interval: 10s
      timeout: 30s
      retries: 10
    volumes:
      - './servers/core/Source:/app:z'
      - '/app/bin'
      - '/app/obj'

  admin-panel2:
    build: ./admin-panel2-revenge-of-the-backender
    ports:
      - 193.108.115.129:80:5020
    depends_on:
      core:
        condition: service_healthy
    volumes:
      - './admin-panel2-revenge-of-the-backender:/app:z'
      - '/app/node_modules'

  redis:
    image: redis
    ports:
      - 6397:6379
    volumes:
      - redisdata:/var/lib/redis/data

  bot:
    build: ./telegram-bot
    command: bash start.sh
    ports:
      - 8001:8000
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      core:
        condition: service_healthy
    volumes:
      - './telegram-bot:/app:z'

  parserdb:
    image: mongo
    ports:
      - 27071:27017
    volumes:
      - parserdata:/var/lib/parser/data

  parser:
    build: ./servers/parser
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      parserdb:
        condition: service_started
    healthcheck:
      test: "curl --fail http://localhost:8000/ping || exit"
      interval: 10s
      timeout: 30s
      retries: 10
    volumes:
      - './servers/parser:/app:z'

volumes:
  redisdata:
  parserdata:
  coredata:
  blobdata:
